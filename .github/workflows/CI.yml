name: CI

on:
  push:
    branches: [master]
    paths-ignore:
      - "**.md"
      - "**.bat"

  pull_request:
    types: [opened, reopened, synchronize]
  release:
    types: [published]

env:
  PACKAGE_NAME: PluginsController
  STORE_READMY: 0

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    outputs:
      COMMIT_SHA: ${{ steps.declare_sha.outputs.COMMIT_SHA }}
      SEMVER: ${{ steps.declare_sha.outputs.SEMVER }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0

      - name: Parse SemVer string (release)
        id: semver_parser
        if: |
          github.event_name == 'release' &&
          github.event.action == 'published' &&
          startsWith(github.ref, 'refs/tags/')
        uses: booxmedialtd/ws-action-parse-semver@v1.4.7
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: 'refs\/tags\/(.*)$'

      - name: Declare SHA & package name
        id: declare_sha
        shell: bash
        run: |
          SHA=$(git rev-parse --short HEAD)
          echo "COMMIT_SHA=$SHA" >> $GITHUB_OUTPUT        
          echo "SEMVER=${{ steps.semver_parser.outputs.fullversion }}" >> $GITHUB_OUTPUT

      - name: Setup AMXXPawn Compiler
        uses: wopox1337/setup-amxxpawn@v1.1.0
        with:
          version: "1.10.5428"

      - name: Compile plugins
        working-directory: amxmodx/scripting/
        env:
          REAPI_INCLUDE: ${{ env.REAPI_INCLUDE_PATH }}
          PARAMS_CONRTOLLER_INCLUDE: ${{ env.PARAMS_CONRTOLLER_INCLUDE_PATH }}
        run: |
          compile() {
            sourcefile=$1
            amxxfile="$(echo $sourcefile | sed -e 's/\.sma$/.amxx/')"
            output_path="../plugins/$amxxfile"

            mkdir -p $(dirname $output_path)

            echo -n "Compiling $sourcefile ... "
            amxxpc $sourcefile -o"$output_path" \
              -i"include" \
              -i"$REAPI_INCLUDE" \
              -i"$PARAMS_CONRTOLLER_INCLUDE"
          }
          export -f compile

          find . -type f -name "*.sma" -exec bash -c 'compile "$0"' {} \;

      - name: Move files
        env:
          STORE_READMY: ${{ env.STORE_READMY }}
        run: |
          mkdir -p publish/${{ env.PACKAGE_NAME }}/addons
          mv amxmodx/ publish/${{ env.PACKAGE_NAME }}/addons/

          if [ ! -z "${STORE_READMY}" ]; then
            mv README.md publish/
          fi

      - name: Deploy artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: ${{ env.PACKAGE_NAME }}-${{ steps.declare_sha.outputs.COMMIT_SHA }}-dev
          path: publish/*

  publish:
    name: "Publish release"
    runs-on: ubuntu-latest
    needs: [build]
    if: |
      github.event_name == 'release' &&
      github.event.action == 'published' &&
      startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4.1.4
        with:
          name: ${{ env.PACKAGE_NAME }}-${{ needs.build.outputs.COMMIT_SHA }}-dev

      - name: Packaging binaries
        id: packaging
        run: 7z a -mm=Deflate -mfb=258 -mpass=15 -r ${{ env.PACKAGE_NAME }}-${{ needs.build.outputs.SEMVER }}.zip

      - name: Publish artifacts
        uses: softprops/action-gh-release@v2.0.4
        id: publish-job
        if: |
          startsWith(github.ref, 'refs/tags/') &&
          steps.packaging.outcome == 'success'
        with:
          files: |
            *.zip
